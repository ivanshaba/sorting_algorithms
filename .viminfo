# This viminfo file was generated by Vim 8.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Command Line History (newest to oldest):
:%d
|2,0,1695133607,,"%d"

# Search String History (newest to oldest):

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
""1	LINE	0
	#ifndef COMMAND_LINE_PROCESSING_H
	#define COMMAND_LINE_PROCESSING_H
	
	// Function prototypes
	void processCommandLineArguments(int argc, char *argv[]);
	
	#endif /* COMMAND_LINE_PROCESSING_H */
	
	
	#ifndef PATH_ENV_VARIABLE_H
	#define PATH_ENV_VARIABLE_H
	
	// Function prototypes
	void searchAndExecuteCommand(int argc, char *argv[]);
	
	#endif /* PATH_ENV_VARIABLE_H */
	
	
	#ifndef EXIT_COMMAND_H
	#define EXIT_COMMAND_H
	
	// Function prototypes
	void processExitCommand(int argc, char *argv[]);
	
	#endif /* EXIT_COMMAND_H */
	
	
	#ifndef LIST_ENV_VARIABLES_H
	#define LIST_ENV_VARIABLES_H
	
	// Function prototypes
	void listEnvironmentVariables();
	
	#endif /* LIST_ENV_VARIABLES_H */
	
	
	#ifndef CUSTOM_GETLINE_H
	#define CUSTOM_GETLINE_H
	
	// Function prototype
	ssize_t custom_getline(char **lineptr, size_t *n, FILE *stream);
	
	#endif /* CUSTOM_GETLINE_H */
	
	
	#ifndef STRING_SPLITTING_H
	#define STRING_SPLITTING_H
	
	// Function prototype
	char **splitString(char *string, char *delimiter);
|3,1,1,1,50,0,1695133607,"#ifndef COMMAND_LINE_PROCESSING_H","#define COMMAND_LINE_PROCESSING_H","","// Function prototypes","void processCommandLineArguments(int argc, char *argv[]);","","#endif /* COMMAND_LINE_PROCESSING_H */","","","#ifndef PATH_ENV_VARIABLE_H","#define PATH_ENV_VARIABLE_H","","// Function prototypes","void searchAndExecuteCommand(int argc, char *argv[]);","","#endif /* PATH_ENV_VARIABLE_H */","","","#ifndef EXIT_COMMAND_H",>24
|<"#define EXIT_COMMAND_H","","// Function prototypes","void processExitCommand(int argc, char *argv[]);","","#endif /* EXIT_COMMAND_H */","","","#ifndef LIST_ENV_VARIABLES_H","#define LIST_ENV_VARIABLES_H","","// Function prototypes","void listEnvironmentVariables();","","#endif /* LIST_ENV_VARIABLES_H */","","","#ifndef CUSTOM_GETLINE_H","#define CUSTOM_GETLINE_H","","// Function prototype","ssize_t custom_getline(char **lineptr, size_t *n, FILE *stream);","",>31
|<"#endif /* CUSTOM_GETLINE_H */","","","#ifndef STRING_SPLITTING_H","#define STRING_SPLITTING_H","","// Function prototype","char **splitString(char *string, char *delimiter);"
"2	LINE	0
	// This code is indented using tabs, and each statement is on its own line.
	// There are no multiple assignments on the same line.
	// All keywords are followed by a space, except for sizeof, typeof,
	// alignof, and __attribute__.
	// All blocks of code are indented, including nested blocks.
	
	#include <stdio.h>
	
	int main(void) {
	  // This function is declared on its own line, and the opening brace is on the
	  // next line.
	  // The body of the function is indented by one tab.
	  // The closing brace is on its own line, and it is aligned with the
	  // opening brac
|3,0,2,1,14,0,1695132433,"// This code is indented using tabs, and each statement is on its own line.","// There are no multiple assignments on the same line.","// All keywords are followed by a space, except for sizeof, typeof,","// alignof, and __attribute__.","// All blocks of code are indented, including nested blocks.","","#include <stdio.h>","","int main(void) {","  // This function is declared on its own line, and the opening brace is on the",>17
|<"  // next line.","  // The body of the function is indented by one tab.","  // The closing brace is on its own line, and it is aligned with the","  // opening brac"
"3	LINE	0
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	
	int main(int argc, char *argv[]) {
	  // Get the PATH environment variable.
	  char *path = getenv("PATH");
	
	  // Split the PATH environment variable into a list of directories.
	  char *directories[1024];
	  int num_directories = 0;
	  char *directory = strtok(path, ":");
	  while (directory != NULL) {
	    directories[num_directories] = directory;
	    num_directories++;
	    directory = strtok(NULL, ":");
	  }
	
	  // Iterate over the list of directories and check if the command exists in each directory.
	  for (int i = 0; i < num_directories; i++) {
	    char full_path[1024];
	    sprintf(full_path, "%s/%s", directories[i], argv[1]);
	
	    if (access(full_path, F_OK) == 0) {
	      // The command exists. Execute it and return.
	      execve(full_path, NULL, NULL);
	      return 0;
	    }
	  }
	
	  // The command does not exist in any of the directories. Print an error message and exit the program.
	  printf("Command not found: %s\n", argv[1]);
	  exit(1);
	}
|3,0,3,1,34,0,1695129144,"#include <stdio.h>","#include <stdlib.h>","#include <string.h>","","int main(int argc, char *argv[]) {","  // Get the PATH environment variable.","  char *path = getenv(\"PATH\");","","  // Split the PATH environment variable into a list of directories.","  char *directories[1024];","  int num_directories = 0;","  char *directory = strtok(path, \":\");","  while (directory != NULL) {","    directories[num_directories] = directory;",>24
|<"    num_directories++;","    directory = strtok(NULL, \":\");","  }","","  // Iterate over the list of directories and check if the command exists in each directory.","  for (int i = 0; i < num_directories; i++) {","    char full_path[1024];","    sprintf(full_path, \"%s/%s\", directories[i], argv[1]);","","    if (access(full_path, F_OK) == 0) {","      // The command exists. Execute it and return.","      execve(full_path, NULL, NULL);","      return 0;","    }","  }","",>105
|<"  // The command does not exist in any of the directories. Print an error message and exit the program.","  printf(\"Command not found: %s\\n\", argv[1]);","  exit(1);","}"
"4	LINE	0
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	
	int main(int argc, char *argv[]) {
	  // Declare an array of strings to store the command line arguments.
	  char *commands[] = { "help", "quit" };
	
	  // Iterate over the command line arguments array and process each argument.
	  for (int i = 1; i < argc; i++) {
	    // Compare the command line argument to the known commands.
	    if (strcmp(argv[i], commands[0]) == 0) {
	      // Print the help message.
	      printf("Usage: program [help|quit]\n");
	      exit(0);
	    } else if (strcmp(argv[i], commands[1]) == 0) {
	      // Quit the program.
	      exit(0);
	    }
	  }
	
	  // If no known command was found, print an error message and exit the program.
	  printf("Unknown command: %s\n", argv[1]);
	  exit(1);
	}
|3,0,4,1,25,0,1695127793,"#include <stdio.h>","#include <stdlib.h>","#include <string.h>","","int main(int argc, char *argv[]) {","  // Declare an array of strings to store the command line arguments.","  char *commands[] = { \"help\", \"quit\" };","","  // Iterate over the command line arguments array and process each argument.","  for (int i = 1; i < argc; i++) {","    // Compare the command line argument to the known commands.",>46
|<"    if (strcmp(argv[i], commands[0]) == 0) {","      // Print the help message.","      printf(\"Usage: program [help|quit]\\n\");","      exit(0);","    } else if (strcmp(argv[i], commands[1]) == 0) {","      // Quit the program.","      exit(0);","    }","  }","","  // If no known command was found, print an error message and exit the program.","  printf(\"Unknown command: %s\\n\", argv[1]);","  exit(1);","}"
"5	LINE	0
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	#include <unistd.h>
	
	#define PROMPT "simple_shell> "
	
	int main() {
	  char command[1024];
	
	  while (1) {
	    // Display the prompt.
	    printf(PROMPT);
	
	    // Read the command line from the user.
	    fgets(command, sizeof(command), stdin);
	
	    // If the user entered Ctrl+D, exit.
	    if (command[0] == EOF) {
	      break;
	    }
	
	    // Remove the newline character from the end of the command line.
	    command[strlen(command) - 1] = '\0';
	
	    // Try to find the executable for the command.
	    char *path = getenv("PATH");
	    char *executable = strtok(path, ":");
	    while (executable != NULL) {
	      char full_path[1024];
	      sprintf(full_path, "%s/%s", executable, command);
	
	      if (access(full_path, F_OK) == 0) {
	        // Found the executable.
	        execve(full_path, NULL, NULL);
	        break;
	      }
	
	      executable = strtok(NULL, ":");
	    }
	
	    // If the executable could not be found, print an error message.
	    if (executable == NULL) {
	      printf("Command not found: %s\n", command);
	    }
	  }
	
	  return 0;
	}
	
|3,0,5,1,50,0,1695120150,"#include <stdio.h>","#include <stdlib.h>","#include <string.h>","#include <unistd.h>","","#define PROMPT \"simple_shell> \"","","int main() {","  char command[1024];","","  while (1) {","    // Display the prompt.","    printf(PROMPT);","","    // Read the command line from the user.","    fgets(command, sizeof(command), stdin);","","    // If the user entered Ctrl+D, exit.","    if (command[0] == EOF) {","      break;","    }","",>71
|<"    // Remove the newline character from the end of the command line.","    command[strlen(command) - 1] = '\\0';","","    // Try to find the executable for the command.","    char *path = getenv(\"PATH\");","    char *executable = strtok(path, \":\");","    while (executable != NULL) {","      char full_path[1024];","      sprintf(full_path, \"%s/%s\", executable, command);","","      if (access(full_path, F_OK) == 0) {","        // Found the executable.",>40
|<"        execve(full_path, NULL, NULL);","        break;","      }","","      executable = strtok(NULL, \":\");","    }","","    // If the executable could not be found, print an error message.","    if (executable == NULL) {","      printf(\"Command not found: %s\\n\", command);","    }","  }","","  return 0;","}",""

# File marks:
'0  1  46  ~/simple_shell/AUTHORS
|4,48,1,46,1695134226,"~/simple_shell/AUTHORS"
'1  1  21  ~/simple_shell/README.md
|4,49,1,21,1695134166,"~/simple_shell/README.md"
'2  1  0  ~/simple_shell/main.h
|4,50,1,0,1695133651,"~/simple_shell/main.h"
'3  40  30  ~/simple_shell/main.h
|4,51,40,30,1695133630,"~/simple_shell/main.h"
'4  40  30  ~/simple_shell/main.h
|4,52,40,30,1695133630,"~/simple_shell/main.h"
'5  16  0  ~/simple_shell/beatycode1.c
|4,53,16,0,1695132808,"~/simple_shell/beatycode1.c"
'6  49  0  ~/simple_shell/beauty_code.c
|4,54,49,0,1695132667,"~/simple_shell/beauty_code.c"
'7  16  0  ~/simple_shell/betty_code.p
|4,55,16,0,1695132498,"~/simple_shell/betty_code.p"
'8  33  0  ~/simple_shell/last_number_p.c
|4,56,33,0,1695130988,"~/simple_shell/last_number_p.c"
'9  65  0  ~/simple_shell/comments_p.c
|4,57,65,0,1695130883,"~/simple_shell/comments_p.c"

# Jumplist (newest first):
-'  1  46  ~/simple_shell/AUTHORS
|4,39,1,46,1695134226,"~/simple_shell/AUTHORS"
-'  1  21  ~/simple_shell/README.md
|4,39,1,21,1695134166,"~/simple_shell/README.md"
-'  1  21  ~/simple_shell/README.md
|4,39,1,21,1695134166,"~/simple_shell/README.md"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133651,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133651,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133651,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133651,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133636,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133636,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133636,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133636,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133630,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133630,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133630,"~/simple_shell/main.h"
-'  40  30  ~/simple_shell/main.h
|4,39,40,30,1695133630,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133607,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133607,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133607,"~/simple_shell/main.h"
-'  1  0  ~/simple_shell/main.h
|4,39,1,0,1695133607,"~/simple_shell/main.h"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  16  0  ~/simple_shell/beatycode1.c
|4,39,16,0,1695132808,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  1  0  ~/simple_shell/beatycode1.c
|4,39,1,0,1695132801,"~/simple_shell/beatycode1.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  49  0  ~/simple_shell/beauty_code.c
|4,39,49,0,1695132667,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"
-'  52  0  ~/simple_shell/beauty_code.c
|4,39,52,0,1695132644,"~/simple_shell/beauty_code.c"

# History of marks within files (newest to oldest):

> ~/simple_shell/AUTHORS
	*	1695134225	0
	"	1	46
	^	1	47
	.	1	46
	+	1	46

> ~/simple_shell/README.md
	*	1695134165	0
	"	1	21
	^	1	22
	.	1	21
	+	1	21

> ~/simple_shell/main.h
	*	1695133649	0
	"	1	0
	^	40	31
	.	41	0
	+	1	24
	+	41	0

> ~/simple_shell/beatycode1.c
	*	1695132807	0
	"	16	0
	^	16	1
	.	17	0
	+	17	0

> ~/simple_shell/beauty_code.c
	*	1695132666	0
	"	49	0
	^	52	1
	.	53	0
	+	53	0

> ~/simple_shell/betty_code.p
	*	1695132496	0
	"	16	0
	^	16	1
	.	17	0
	+	1	18
	+	17	0

> ~/simple_shell/last_number_p.c
	*	1695130984	0
	"	33	0
	^	33	1
	.	34	0
	+	34	0

> ~/simple_shell/comments_p.c
	*	1695130881	0
	"	65	0
	^	65	1
	.	66	0
	+	66	0

> ~/simple_shell/sign_p.c
	*	1695130703	0
	"	52	0
	^	52	1
	.	53	0
	+	53	0

> ~/simple_shell/alias_bultin.c
	*	1695130602	0
	"	71	0
	^	71	1
	.	72	0
	+	72	0

> ~/simple_shell/and_p.c
	*	1695130284	0
	"	28	0
	^	28	1
	.	29	0
	+	29	0

> ~/simple_shell/colon_p.c
	*	1695130184	0
	"	21	0
	^	21	1
	.	22	0
	+	22	0

> ~/simple_shell/cd_p.c
	*	1695130086	0
	"	42	0
	^	42	1
	.	43	0
	+	43	0

> ~/simple_shell/set_unset.c
	*	1695129959	0
	"	36	0
	^	36	1
	.	37	0
	+	37	0

> ~/simple_shell/bulet_exit.c
	*	1695129763	0
	"	28	0
	^	28	1
	.	29	0
	+	29	0

> ~/simple_shell/not_allowed.c
	*	1695129649	0
	"	37	0
	^	37	0
	.	43	0
	+	43	0

> ~/simple_shell/own_p.c
	*	1695129539	0
	"	61	0
	^	61	1
	.	62	0
	+	62	0

> ~/simple_shell/env_p.c
	*	1695129412	0
	"	18	0
	^	18	1
	.	19	0
	+	19	0

> ~/simple_shell/exit_p.c
	*	1695129299	0
	"	15	0
	^	15	1
	.	16	0
	+	16	0

> ~/simple_shell/path_han.c
	*	1695129180	0
	"	35	0
	^	35	1
	.	36	0
	+	1	18
	+	35	1
	+	36	0

> ~/simple_shell/cm_arg.c
	*	1695127803	0
	"	25	0
	^	25	1
	.	26	0
	+	1	18
	+	26	0

> ~/alx-low_level_programming/simple_shell/beauty_code.c
	*	1695120280	0
	"	35	0
	^	35	0
	.	52	1
	+	1	1
	+	1	18
	+	52	1

> /pid.c
	*	1695055847	0
	"	1	0
